spring:
  output:
    ansi:
      enabled: always
  application:
    name: AlfrescoNodeVault
  profiles:
    active: dev
  cloud:
    gateway:
      routes:
        - id: vault_node_route
          uri: http://localhost:8086
          predicates:
            - Path=/alfresco/api/-default-/public/alfresco/versions/1/nodes/{nodeId}
            - Method=GET
            - name: IsOnVaultPredicate
          filters:
            - SetPath=/api/vault/nodes/{nodeId}
        - id: vault_node_content_route
          uri: http://localhost:8086
          predicates:
            - Path=/alfresco/api/-default-/public/alfresco/versions/1/nodes/{nodeId}/content
            - Method=GET
            - name: IsOnVaultPredicate
          filters:
            - SetPath=/api/vault/nodes/{nodeId}/content
        - id: vault_direct_api_route
          uri: http://localhost:8086
          predicates:
            - Path=/api/vault/**
        - id: alfresco_default_route
          uri: ${ALFRESCO_BASE_PATH:http://localhost:8080}
          predicates:
            - Path=/alfresco/**,/api-explorer/**
    vault:
      uri: ${VAULT_URL:http://localhost:8200}
      token: root
      kv:
        enabled: true
        backend: secret
  config:
    import: vault://
  activemq:
    brokerUrl: ${ACTIVE_MQ_URL:tcp://localhost:61616}
  jms:
    cache:
      enabled: false
  data:
    mongodb:
      uri: ${MONGODB_URL:mongodb://localhost:27017}
      auth-database: admin
      database: vault
      username: root
      password: example
springdoc:
  swagger-ui:
    enabled: true
    path: /swagger
    operations-sorter: method
management:
  security:
    basic-auth:
      username: admin
      password: admin
  endpoints:
    web:
      exposure:
        include: "prometheus,health,info,metrics,env,loggers"
  endpoint:
    health:
      show-details: always
content:
  service:
    url: ${ALFRESCO_BASE_PATH:http://localhost:8080}
    security:
      basicAuth:
        username: ${ALFRESCO_USERNAME:admin}
        password: ${ALFRESCO_PASSWORD:admin}
    path: /alfresco/api/-default-/public/alfresco/versions/1
search:
  service:
    path: /alfresco/api/-default-/public/search/versions/1
application:
  event-handler:
    enabled: ${EVENT_HANDLER_ENABLED:false}
  archiving-job:
    cron-expression: ${ARCHIVING_JOB_CRON_EXPRESSION:0 0/5 2-6 * * ?}
    query: ${ARCHIVING_JOB_QUERY:TYPE:'cm:content' AND ASPECT:'anv:archive'}
    enabled: ${ARCHIVING_JOB_ENABLED:true}
  service:
    alfresco:
      include:
        - allowableOperations
        - association
        - isLink
        - isFavorite
        - isLocked
        - path
        - permissions
        - definition
      permanently-delete-nodes: true
      search-batch-size: 100
      chunk-size: 8192
    vault:
      hash-algorithm: ${VAULT_HASH_ALGORITHM:SHA-256}
      double-check: ${VAULT_DOUBLE_CHECK:true}
      encryption:
        enabled: ${VAULT_ENCRYPTION_ENABLED:true}
        metadata: ${VAULT_ENCRYPT_METADATA:true}
        vault-secret-kv-mount: ${VAULT_ENCRYPTION_KV_MOUNT:secret}
        vault-secret-path: ${VAULT_ENCRYPTION_SECRET_PATH:AlfrescoNodeVault}
        vault-secret-key: ${VAULT_ENCRYPTION_SECRET_KEY:anv.secret}
        secret: ${VAULT_ENCRYPTION_SECRET:changeme}
        impl: bc
        jca:
          salt-length: 16
          iv-length: 12
        bc:
          salt-length: 16
          nonce-length: 12
        kdf:
          impl: pbkdf2
          pbkdf2:
            iterations: 100000
          hkdf:
            info: hkdf-info
          argon2:
            parallelism: 1
            memory: 65536
            iterations: 3

  same-node-processing-threshold: ${SAME_NODE_PROCESSING_THRESHOLD:10000}
server:
  port: 8086
services:
  alfresco:
    mem_limit: 1536m
    build:
      context: .
      args:
        ACS_IMAGE: ${ACS_IMAGE}
        ACS_VERSION: ${ACS_VERSION}
    environment:
      JAVA_TOOL_OPTIONS: "
            -Dencryption.keystore.type=JCEKS
            -Dencryption.cipherAlgorithm=DESede/CBC/PKCS5Padding
            -Dencryption.keyAlgorithm=DESede
            -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore
            -Dmetadata-keystore.password=mp6yc0UD9e
            -Dmetadata-keystore.aliases=metadata
            -Dmetadata-keystore.metadata.password=oKIWzVdEdA
            -Dmetadata-keystore.metadata.algorithm=DESede
            "
      JAVA_OPTS: "
            -Ddb.driver=org.postgresql.Driver
            -Ddb.username=alfresco
            -Ddb.password=alfresco
            -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
            -Dsolr.host=solr6
            -Dsolr.port=8983
            -Dsolr.secureComms=secret
            -Dsolr.sharedSecret=secret
            -Dsolr.base.url=/solr
            -Dindex.subsystem.name=solr6
            -Dshare.host=127.0.0.1
            -Dshare.port=8080
            -Dalfresco.host=localhost
            -Dalfresco.port=8080
            -Daos.baseUrlOverwrite=http://localhost:8080/alfresco/aos
            -Dmessaging.broker.url=\"failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true\"
            -Ddeployment.method=DOCKER_COMPOSE
            -Dtransform.service.enabled=true
            -Dtransform.service.url=http://transform-router:8095
            -Dsfs.url=http://shared-file-store:8099/
            -DlocalTransform.core-aio.url=http://transform-core-aio:8090/
            -Dcsrf.filter.enabled=false
            -Ddsync.service.uris=http://localhost:9090/alfresco
            -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
            -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000
            -Dcom.sun.management.jmxremote=true
            -Djava.rmi.server.hostname=localhost
            -Dcom.sun.management.jmxremote.port=50800
            -Dcom.sun.management.jmxremote.rmi.port=50801
            -Dcom.sun.management.jmxremote.authenticate=false
            -Dcom.sun.management.jmxremote.ssl=false
            "
    ports:
      - "8000:8000"
      - "8080:8080"
      - "50800:50800"
      - "50801:50801"
    volumes:
      - anv-acs-volume:/usr/local/tomcat/alf_data
  share:
    image: ${SHARE_IMAGE}:${SHARE_VERSION}
    mem_limit: 512m
    environment:
      REPO_HOST: host.docker.internal
      REPO_PORT: 8080
    ports:
      - "8180:8080"
  postgres:
    image: ${POSTGRES_IMAGE}:${POSTGRES_VERSION}
    mem_limit: 512m
    environment:
      - POSTGRES_PASSWORD=alfresco
      - POSTGRES_USER=alfresco
      - POSTGRES_DB=alfresco
    command: postgres -c max_connections=300 -c log_min_messages=LOG
    ports:
      - "5432:5432"
    volumes:
      - anv-postgres-volume:/var/lib/postgresql/data
  solr6:
    image: ${ASS_IMAGE}:${ASS_VERSION}
    mem_limit: 1g
    environment:
      # Solr needs to know how to register itself with Alfresco
      SOLR_ALFRESCO_HOST: "alfresco"
      SOLR_ALFRESCO_PORT: "8080"
      # Alfresco needs to know how to call solr
      SOLR_SOLR_HOST: "solr6"
      SOLR_SOLR_PORT: "8983"
      # Create the default alfresco and archive cores
      SOLR_CREATE_ALFRESCO_DEFAULTS: "alfresco,archive"
      # HTTPS or SECRET
      ALFRESCO_SECURE_COMMS: "secret"
      # SHARED SECRET VALUE
      JAVA_TOOL_OPTIONS: "
           -Dalfresco.secureComms.secret=secret
         "
    ports:
      - "8083:8983" # Browser port
    volumes:
      - anv-ass-volume:/opt/alfresco-search-services/data
  activemq:
    image: ${ACTIVEMQ_IMAGE}:${ACTIVEMQ_VERSION}
    ports:
      - 8161:8161 # Web Console
      - 5672:5672 # AMQP
      - 61616:61616 # OpenWire
      - 61613:61613 # STOMP
  mongo:
    image: ${MONGO_IMAGE}
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - anv-mongo-volume:/data/db
  mongo-express:
    image: ${MONGO_EXPRESS_IMAGE}
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
volumes:
  anv-acs-volume:
    external: true
  anv-postgres-volume:
    external: true
  anv-ass-volume:
    external: true
  anv-mongo-volume:
    external: true